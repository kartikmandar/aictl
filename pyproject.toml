[project]
name = "aictl"
version = "0.1.2"
description = "AI Control Tool"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.104.0",
    "fastmcp>=2.12.2",
    "pydantic>=2.10.6",
    "apscheduler>=3.10.4",
    "sqlalchemy>=2.0.0",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "libtmux>=0.37.0",
    "aiofiles>=24.1.0",
    "click>=8.0.0",
    "python-frontmatter>=1.1.0",
    "watchdog==6.0.0",
    "requests>=2.32.0",
]

[project.scripts]
"aictl" = "aictl.cli.main:cli"
"aictl-server" = "aictl.api.main:main"
"aictl-mcp-server" = "aictl.mcp_server.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/aictl"]

[dependency-groups]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.26.0",
    "pytest-mock>=3.11.1",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pytest-xdist>=3.8.0",
]

[tool.black]
line-length = 100
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
markers = [
    "asyncio: marks tests that use asyncio",
    "integration: marks integration tests",
    "e2e: marks end-to-end tests"
]
asyncio_mode = "strict"
testpaths = ["test"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=src --cov-report=term-missing"
